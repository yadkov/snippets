# Dry-run state
salt '*' state.apply formula.foo test=True

# list all file on the master
salt '*' cp.list_master

# target minions which are in file
salt -L "$(<filename)" test.ping

# target minions by grains
salt -G 'os:Debian' test.ping

# run command of the minion
# --local flag will ignore the master
salt-call --local state.apply


# Pillar vs grains
# https://stackoverflow.com/questions/13115700/salt-stack-grains-vs-pillars
#######################################
# Pillar
#######################################
# Refresh pillar
salt '*' saltutil.refresh_pillar



#######################################
# Grains
#######################################
# Add a list of append to a list
salt 'webserver' grains.append roles webserver

# Get a grain
salt 'webserver' grains.item roles


#######################################
# Jobs
#######################################
# list running jobs

# kill a job
salt '*' saltutil.kill_job <jobid>

# kill all jobs
salt '*' saltutil.kill_all_jobs


#######################################
# Variables
#######################################
# Print vairable in the log
## In state file:
{%- set myname = 'John Doe' %}
{%- do salt.log.info("My name is " ~ myname) %}

## Run salt-call
salt-call -l info state.apply statefile

# print variable on the run
## in state file
{%- set myname = 'John Doe' %}
sample.state:
  test.show_notification:
    - name: test notification
    - text: "This is var myname: {{ myname }}"

